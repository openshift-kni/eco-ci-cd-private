- name: Check rsync is installed
  ansible.builtin.package_facts:
    manager: auto
  register: found_packages
  failed_when: "'rsync' not in found_packages.ansible_facts.packages"

- name: Remove artifacts_dir  # noqa:ignore-errors
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ remote_artifacts_dir }}"
    - "{{ ansible_env.HOME }}/redeploy_operators.log"
    - "{{ ansible_env.HOME }}/test_automation.log"

- name: Run redeploy operators  # noqa:ignore-errors
  ansible.builtin.shell:
    cmd: >-
      ansible-playbook
      -i ~/inventory.yml playbooks/redeploy_oran_o2ims_operators.yml
      -e artifacts_dir={{ remote_artifacts_dir }}
      -vv
      > {{ ansible_env.HOME }}/redeploy_operators.log 2>&1
    chdir: "eco-validation"
  changed_when: false

- name: Run tests  # noqa:ignore-errors
  ansible.builtin.shell:
    cmd: >-
      ansible-playbook
      -i ~/inventory.yml playbooks/run_compliance_tests.yml
      -e artifacts_dir={{ remote_artifacts_dir }}
      -vv
      > {{ ansible_env.HOME }}/test_automation.log 2>&1
    chdir: "eco-validation"
  changed_when: false
  ignore_errors: true

- name: Run tests  # noqa:ignore-errors
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ remote_artifacts_dir }}"
    remote_src: true
    mode: "0644"
  ignore_errors: true
  loop:
    - "{{ ansible_env.HOME }}/redeploy_operators.log"
    - "{{ ansible_env.HOME }}/test_automation.log"

- name: Copy test results
  ansible.posix.synchronize:
    src: "{{ remote_artifacts_dir }}/"
    dest: "{{ artifacts_dir }}"
    rsync_opts:
      - "--rsh '/usr/bin/ssh {{ hostvars[inventory_hostname]['ansible_ssh_common_args'] | default('') }}'"
    mode: pull
  delegate_to: localhost

- name: Check if test results exists
  ansible.builtin.find:
    path: "{{ artifacts_dir }}/reports"
    patterns: "output.xml,report.hmtl"
    recurse: true
  register: reports
  delegate_to: localhost
  failed_when: (reports.matched | int)  <= 0
