- name: Check rsync is installed
  ansible.builtin.package_facts:
    manager: auto
  register: found_packages
  failed_when: "'rsync' not in found_packages.ansible_facts.packages"

- name: Clone eco-validation
  ansible.builtin.git:
    repo: "{{ eco_validation_repo }}"
    dest: "eco-validation"
    version: "{{ eco_validation_repo_version | default(omit) }}"
    force: true


- name: Run redeploy operators  # noqa:ignore-errors
  ansible.builtin.command:
    cmd: |
      ansible-playbook
      -i ~/inventory.yml playbooks/redeploy_oran_o2ims_operators.yml
      -e artifacts_dir={{ remote_artifacts_dir }}
      > {{ remote_artifacts_dir }}/redeploy_operators.log"
    chdir: "eco-validation"
  changed_when: false
  ignore_errors: true

- name: Run tests  # noqa:ignore-errors
  ansible.builtin.command:
    cmd: |
      ansible-playbook
      -i ~/inventory.yml playbooks/run_compliance_tests.yml
      -e artifacts_dir={{ remote_artifacts_dir }}
      > {{ remote_artifacts_dir }}/test_automation.log"
    chdir: "eco-validation"
  changed_when: false
  ignore_errors: true

- name: Copy test results
  ansible.posix.synchronize:
    src: "{{ remote_artifacts_dir }}"
    dest: "{{ artifacts_dir }}"
    rsync_opts:
      - "--rsh '/usr/bin/ssh {{ hostvars[inventory_hostname]['ansible_ssh_common_args'] }}'"
    mode: pull
  delegate_to: localhost

- name: Check if test results exists
  ansible.builtin.find:
    path: "{{ artifacts_dir }}/compliance_tests"
    patterns: "output.xml,report.hmtl"
    recurse: true
  register: reports
  delegate_to: localhost
  failed_when: (reports.matched | int)  <= 0
